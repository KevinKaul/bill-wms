# 仓库管理系统 API 测试文件
# 使用 REST Client VSCode 扩展或类似工具测试

@baseUrl = http://localhost:3000/api/v1
@authToken = Bearer your-auth-token-here

### 1. 产品管理测试

# 获取产品列表
GET {{baseUrl}}/products?page=1&pageSize=10
Authorization: {{authToken}}

###

# 创建原材料产品
POST {{baseUrl}}/products
Authorization: {{authToken}}
Content-Type: application/json

{
  "sku": "RM001",
  "name": "优质原材料A",
  "type": "RAW_MATERIAL",
  "image": "https://example.com/image.jpg",
  "referencePurchasePrice": 15.5
}

###

# 创建成品产品
POST {{baseUrl}}/products
Authorization: {{authToken}}
Content-Type: application/json

{
  "sku": "FP001",
  "name": "精美花环",
  "type": "FINISHED_PRODUCT",
  "image": "https://example.com/flower.jpg",
  "guidancePrice": 89.99,
  "bomItems": [
    {
      "componentId": "product-id-of-rm001",
      "quantity": 10
    }
  ]
}

### 2. 供应商管理测试

# 获取供应商列表
GET {{baseUrl}}/suppliers?page=1&per_page=10
Authorization: {{authToken}}

###

# 创建供应商
POST {{baseUrl}}/suppliers
Authorization: {{authToken}}
Content-Type: application/json

{
  "code": "SUP001",
  "fullName": "北京优质材料供应有限公司",
  "account": "1234567890123456789",
  "type": "material",
  "contact_person": "张经理",
  "phone": "138-0000-0000",
  "email": "zhang@supplier.com",
  "address": "北京市朝阳区xxx路xxx号"
}

### 3. 采购计划管理测试

# 获取采购计划列表
GET {{baseUrl}}/purchase/plans?page=1&per_page=10
Authorization: {{authToken}}

###

# 创建采购计划
POST {{baseUrl}}/purchase/plans
Authorization: {{authToken}}
Content-Type: application/json

{
  "title": "2024年第一季度原材料采购计划",
  "remark": "春季生产备货",
  "items": [
    {
      "productId": "product-id-here",
      "quantity": 100,
      "estimatedUnitPrice": 15.0,
      "remark": "优先采购"
    }
  ]
}

###

# 批准采购计划
POST {{baseUrl}}/purchase/plans/plan-id-here/approve
Authorization: {{authToken}}
Content-Type: application/json

{
  "remark": "审核通过，同意执行"
}

###

# 执行采购计划（生成采购单）
POST {{baseUrl}}/purchase/plans/plan-id-here/execute
Authorization: {{authToken}}
Content-Type: application/json

{
  "supplier_groups": [
    {
      "supplier_id": "supplier-id-here",
      "item_ids": ["plan-item-id-here"],
      "additional_cost": 50.0,
      "expected_delivery_date": "2024-03-15",
      "remark": "加急订单"
    }
  ]
}

### 4. 采购单管理测试

# 获取采购单列表
GET {{baseUrl}}/purchase/orders?page=1&per_page=10
Authorization: {{authToken}}

###

# 创建采购单
POST {{baseUrl}}/purchase/orders
Authorization: {{authToken}}
Content-Type: application/json

{
  "supplier_id": "supplier-id-here",
  "items": [
    {
      "product_id": "product-id-here",
      "quantity": 50,
      "unit_price": 15.0
    }
  ],
  "additional_cost": 30.0,
  "expected_delivery_date": "2024-03-20",
  "remark": "常规采购订单"
}

###

# 确认采购单
POST {{baseUrl}}/purchase/orders/order-id-here/confirm
Authorization: {{authToken}}
Content-Type: application/json

{
  "remark": "确认订单，开始生产"
}

###

# 标记付款
POST {{baseUrl}}/purchase/orders/order-id-here/mark-paid
Authorization: {{authToken}}
Content-Type: application/json

{
  "remark": "已通过银行转账付款"
}

###

# 标记到货（重要：触发库存入库）
POST {{baseUrl}}/purchase/orders/order-id-here/mark-arrived
Authorization: {{authToken}}
Content-Type: application/json

{
  "actual_delivery_date": "2024-03-18",
  "remark": "货物质量良好，全部入库"
}

### 5. 库存管理测试

# 获取库存概览
GET {{baseUrl}}/inventory/overview
Authorization: {{authToken}}

###

# 获取库存调整记录
GET {{baseUrl}}/inventory/adjustments?page=1&per_page=10
Authorization: {{authToken}}

###

# 创建库存调整
POST {{baseUrl}}/inventory/adjustments
Authorization: {{authToken}}
Content-Type: application/json

{
  "product_id": "product-id-here",
  "type": "increase",
  "quantity": 10,
  "unit_cost": 15.0,
  "reason": "盘点发现库存差异",
  "remark": "实际库存比系统记录多10个"
}

###

# 获取库存移动记录
GET {{baseUrl}}/inventory/movements?page=1&per_page=10&movement_type=inbound
Authorization: {{authToken}}

### 6. 供应商详情测试

# 获取供应商详情
GET {{baseUrl}}/suppliers/supplier-id-here
Authorization: {{authToken}}

###

# 更新供应商信息
PUT {{baseUrl}}/suppliers/supplier-id-here
Authorization: {{authToken}}
Content-Type: application/json

{
  "contact_person": "李经理",
  "phone": "139-0000-0000",
  "status": "active"
}

### 7. 采购计划详情测试

# 获取采购计划详情
GET {{baseUrl}}/purchase/plans/plan-id-here
Authorization: {{authToken}}

###

# 更新采购计划
PUT {{baseUrl}}/purchase/plans/plan-id-here
Authorization: {{authToken}}
Content-Type: application/json

{
  "title": "更新的采购计划标题",
  "items": [
    {
      "productId": "product-id-here",
      "quantity": 120,
      "estimatedUnitPrice": 14.5,
      "remark": "调整数量和价格"
    }
  ]
}

### 8. 采购单详情测试

# 获取采购单详情
GET {{baseUrl}}/purchase/orders/order-id-here
Authorization: {{authToken}}

###

# 更新采购单
PUT {{baseUrl}}/purchase/orders/order-id-here
Authorization: {{authToken}}
Content-Type: application/json

{
  "additional_cost": 40.0,
  "expected_delivery_date": "2024-03-25",
  "remark": "更新运费和交期"
}
